// Copyright (c) Jupyter Development Team.
// Distributed under the terms of the Modified BSD License.
"use strict";
var commandlinker_1 = require('../commandlinker');
var commandpalette_1 = require('../commandpalette');
var filebrowser_1 = require('../filebrowser');
var services_1 = require('../services');
var _1 = require('./');
/**
 * A service providing an interface to the the launcher.
 */
exports.launcherProvider = {
    id: 'jupyter.services.launcher',
    requires: [services_1.IServiceManager, filebrowser_1.IPathTracker, commandpalette_1.ICommandPalette, commandlinker_1.ICommandLinker],
    provides: _1.ILauncher,
    activate: activateLauncher,
    autoStart: true
};
/**
 * Activate the launcher.
 */
function activateLauncher(app, services, pathTracker, palette, linker) {
    var model = new _1.LauncherModel();
    // Set launcher path and track the path as it changes.
    model.path = pathTracker.path;
    pathTracker.pathChanged.connect(function () { model.path = pathTracker.path; });
    var widget = new _1.LauncherWidget({ linker: linker });
    widget.model = model;
    widget.id = 'launcher';
    widget.title.label = 'Launcher';
    // Hardcoded defaults.
    var defaults = [
        {
            name: 'Notebook',
            command: 'file-operations:new-notebook'
        },
        {
            name: 'Code Console',
            command: 'console:create'
        },
        {
            name: 'Text Editor',
            command: 'file-operations:new-text-file'
        }
    ];
    if (services.terminals.isAvailable()) {
        defaults.push({
            name: 'Terminal',
            command: 'terminal:create-new'
        });
    }
    // Note: we do not retain a handle on the items added by default, which
    // means we have to way of removing them after the fact.
    defaults.forEach(function (options) { model.add(options); });
    app.commands.addCommand('launcher:show', {
        label: 'Show Launcher',
        execute: function () {
            if (!widget.isAttached) {
                app.shell.addToLeftArea(widget);
            }
            app.shell.activateLeft(widget.id);
        }
    });
    palette.addItem({ command: 'launcher:show', category: 'Help' });
    app.shell.addToLeftArea(widget);
    return model;
}
//# sourceMappingURL=plugin.js.map