// Copyright (c) Jupyter Development Team.
// Distributed under the terms of the Modified BSD License.
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var vdom_1 = require('phosphor/lib/ui/vdom');
var vdom_2 = require('../common/vdom');
/**
 * The id name added to the About plugin root DOM node.
 */
var ABOUT_ID = 'about';
/**
 * The class name added to each page in the About plugin.
 */
var SECTION_CLASS = 'jp-About-section';
/**
 * The class name added to center content.
 */
var SECTION_CENTER_CLASS = 'jp-About-sectioncenter';
/**
 * The class name added to group elements on the initial page.
 */
var CONTAINER_CLASS = 'jp-About-container';
/**
 * The class name added to elements in a row.
 */
var ROW_CLASS = 'jp-About-row';
/**
 * The class name added to elements in a column.
 */
var COLUMN_CLASS = 'jp-About-column';
/**
 * The class name used specify postion of elements.
 */
var HALF_CLASS = 'jp-About-one-half';
/**
 * The class name added to the About plugin description on the intial page.
 */
var DESC_ONE_CLASS = 'jp-About-desc-one';
/**
 * The class name added to other plugin descriptions on the intial page.
 */
var DESC_TWO_CLASS = 'jp-About-desc-two';
/**
 * The class name added to headers of other plugins on the intial page.
 */
var DESC_TWO_HEADER_CLASS = 'jp-About-desc-two-header';
/**
 * The class name added to headers.
 */
var HEADER_CLASS = 'jp-About-header';
/**
 * The class name added to plugin pages.
 */
var CONTENT_CLASS = 'jp-About-content';
/**
 * The class name added to descriptions on plugin pages.
 */
var CONTENT_DESC_CLASS = 'jp-About-content-desc';
/**
 * The class name added to the navigation down button.
 */
var NAV_CLASS = 'jp-About-nav-button';
/**
 * The class name added to all images and icons.
 */
var IMAGE_CLASS = 'jp-img';
/**
 * The class name added to the JupyterLab logo.
 */
var LOGO_CLASS = 'jp-About-logo';
/**
 * The class name added to the main area icon.
 */
var MAIN_AREA_ICON_CLASS = 'jp-About-hero-mainarea';
/**
 * The class name added the command palette icon.
 */
var COMMAND_ICON_CLASS = 'jp-About-hero-command';
/**
 * The class name added to the filebrowser icon.
 */
var FILEBROWSER_ICON_CLASS = 'jp-About-hero-filebrowser';
/**
 * The class name added for the notebook icon.
 */
var NOTEBOOK_ICON_CLASS = 'jp-About-hero-notebook';
/**
 * The class name added to the main area image.
 */
var MAIN_AREA_IMAGE_CLASS = 'jp-About-mainarea';
/**
 * The class name added to the command palette image.
 */
var COMMAND_IMAGE_CLASS = 'jp-About-command';
/**
 * The class name added to the filebrowser image.
 */
var FILEBROWSER_IMAGE_CLASS = 'jp-About-fb';
/**
 * The class name added to the notebook image.
 */
var NOTEBOOK_IMAGE_CLASS = 'jp-About-nb';
/**
 * AboutModel holds data which the AboutWidgetwill render.
 */
var AboutModel = (function (_super) {
    __extends(AboutModel, _super);
    /**
     * Construct a new about model.
     */
    function AboutModel() {
        _super.call(this);
        this.title = 'Welcome to the JupyterLab Alpha preview';
        this.headerText = [
            'Click on the Launcher tab for the initial JupyterLab screen.',
            'This demo gives an Alpha-level developer preview of the JupyterLab enviromnent. ',
            'It is not ready for general usage yet.',
            'We are developing JupyterLab at ',
            'https://github.com/jupyterlab/jupyterlab',
            '. Pull requests are welcome!',
            'Here is a brief description of some fo the things you\'ll find in this demo.'
        ];
        this.pluginHeaders = [
            'Main Area',
            'Command Palette',
            'File Browser',
            'Notebook'
        ];
        this.mainAreaDesc = [
            'Open tabs and drag and drop them to rearrange them.',
            'The main area is divided into panels of tabs. Drag a tab around the area ' +
                'to split the main area in different ways. Drag a tab to the center of a ' +
                'panel to move a tab without splitting the panel (in this case, the whole ' +
                'panel will highlight instead of just a portion).',
            'Resize panels by dragging their borders (be aware that panels and sidebars ' +
                'also have a minimum width). A file that contains changes to be saved has ' +
                'a circle for a close icon.'
        ];
        this.filebrowserDesc = [
            'Navigate and organize your files.',
            'Clicking the "Files" tab, located on the left, will toggle the file browser. ' +
                'Navigate into directories by double-clicking, and use the breadcrumbs at the ' +
                'top to navigate out. Create a new file/directory by clicking the plus icon at ' +
                'the top. Click the middle icon to upload files, and click the last icon to reload ' +
                'the file listing. Drag and drop files to move them to subdirectories. ' +
                'Click on a selected file to rename it. Sort the list by clicking on a column header. ' +
                'Open a file by double-clicking it or dragging it into the main area. ' +
                'Opening an image displays the image. Opening a code file opens a code editor. ' +
                'Opening a notebook opens a very preliminary notebook component.'
        ];
        this.commandPaletteDesc = [
            'View list of commands and keyboard shortcuts.',
            'Clicking the "Commands" tab, located on the left, will toggle the command ' +
                'palette. Execute a command by clicking, or navigating with your arrow keys ' +
                'and pressing Enter. Filter commands by typing in the text box at the top of ' +
                'the palette. The palette is organized into categories, and you can filter on ' +
                'a single category by clicking on the category header or by typing the header ' +
                'surrounded by colons in the search input (e.g., :fie).',
            'You can try these things from the command palette:',
            'Open a new terminal(requires macOS or Linux)',
            'Open an IPython console',
            'Open a new file',
            'Save a file',
            'Open a help panel on the right'
        ];
        this.notebookDesc = [
            'Dedicate a tab to running a class notebook.',
            'Opening a notebook will open a minimally-featured notebook. ' +
                'Code execution, Markdown rendering, and basic cell toolbar actions are supported. ' +
                'Future versions will add more features from the existing Jupyter notebook.'
        ];
    }
    return AboutModel;
}(vdom_2.VDomModel));
exports.AboutModel = AboutModel;
/**
 * A virtual-DOM-based widget for the About plugin.
 */
var AboutWidget = (function (_super) {
    __extends(AboutWidget, _super);
    /**
     * Construct a new about widget.
     */
    function AboutWidget() {
        _super.call(this);
    }
    /**
     * Render the about plugin to virtual DOM nodes.
     */
    AboutWidget.prototype.render = function () {
        var title = this.model.title;
        var headerText = this.model.headerText;
        var pluginHeaders = this.model.pluginHeaders;
        var mainAreaDesc = this.model.mainAreaDesc;
        var filebrowserDesc = this.model.filebrowserDesc;
        var commandPaletteDesc = this.model.commandPaletteDesc;
        var notebookDesc = this.model.notebookDesc;
        var headerRow = vdom_1.h.div({ className: ROW_CLASS }, vdom_1.h.div({ className: COLUMN_CLASS }, vdom_1.h.span({ className: IMAGE_CLASS + ' ' + LOGO_CLASS }), vdom_1.h.p({ className: HEADER_CLASS }, title), vdom_1.h.div({ className: DESC_ONE_CLASS }, vdom_1.h.p(headerText[0]), vdom_1.h.p(headerText[1], vdom_1.h.b(headerText[2])), vdom_1.h.p(headerText[3], vdom_1.h.a({ href: headerText[4], target: '_blank' }, headerText[4]), headerText[5]), vdom_1.h.p(headerText[6]))));
        var mainAreaCommandPaletteRow = vdom_1.h.div({ className: ROW_CLASS }, vdom_1.h.div({ className: HALF_CLASS + ' ' + COLUMN_CLASS }, vdom_1.h.p({ className: DESC_TWO_HEADER_CLASS }, vdom_1.h.a({ href: '#main-area' }, vdom_1.h.span({ className: IMAGE_CLASS + ' ' + MAIN_AREA_ICON_CLASS }), pluginHeaders[0])), vdom_1.h.p({ className: DESC_TWO_CLASS }, mainAreaDesc[0])), vdom_1.h.div({ className: HALF_CLASS + ' ' + COLUMN_CLASS }, vdom_1.h.p({ className: DESC_TWO_HEADER_CLASS }, vdom_1.h.a({ href: '#command' }, vdom_1.h.span({ className: IMAGE_CLASS + ' ' + COMMAND_ICON_CLASS }), pluginHeaders[1])), vdom_1.h.p({ className: DESC_TWO_CLASS }, commandPaletteDesc[0])));
        var filebrowserNotebookRow = vdom_1.h.div({ className: ROW_CLASS }, vdom_1.h.div({ className: HALF_CLASS + ' ' + COLUMN_CLASS }, vdom_1.h.p({ className: DESC_TWO_HEADER_CLASS }, vdom_1.h.a({ href: '#filebrowser' }, vdom_1.h.span({ className: IMAGE_CLASS + ' ' + FILEBROWSER_ICON_CLASS }), pluginHeaders[2])), vdom_1.h.p({ className: DESC_TWO_CLASS }, filebrowserDesc[0])), vdom_1.h.div({ className: HALF_CLASS + ' ' + COLUMN_CLASS }, vdom_1.h.p({ className: DESC_TWO_HEADER_CLASS }, vdom_1.h.a({ href: '#notebook' }, vdom_1.h.span({ className: IMAGE_CLASS + ' ' + NOTEBOOK_ICON_CLASS }), pluginHeaders[3])), vdom_1.h.p({ className: DESC_TWO_CLASS }, notebookDesc[0])));
        var mainAreaPage = vdom_1.h.div({ className: SECTION_CLASS }, vdom_1.h.a({ id: 'main-area' }), vdom_1.h.div({ className: SECTION_CENTER_CLASS }, vdom_1.h.p({ className: HEADER_CLASS + ' ' + CONTENT_CLASS }, vdom_1.h.span({ className: IMAGE_CLASS + ' ' + MAIN_AREA_ICON_CLASS }), pluginHeaders[0]), vdom_1.h.span({ className: IMAGE_CLASS + ' ' + MAIN_AREA_IMAGE_CLASS }), vdom_1.h.p({ className: CONTENT_DESC_CLASS }, mainAreaDesc[1]), vdom_1.h.p({ className: CONTENT_DESC_CLASS }, mainAreaDesc[2]), vdom_1.h.a({ href: '#command' }, vdom_1.h.span({ className: NAV_CLASS }))));
        var commandPalettePage = vdom_1.h.div({ className: SECTION_CLASS }, vdom_1.h.a({ id: 'command' }), vdom_1.h.div({ className: SECTION_CENTER_CLASS }, vdom_1.h.p({ className: HEADER_CLASS + ' ' + CONTENT_CLASS }, vdom_1.h.span({ className: IMAGE_CLASS + ' ' + COMMAND_ICON_CLASS }), pluginHeaders[1]), vdom_1.h.span({ className: IMAGE_CLASS + ' ' + COMMAND_IMAGE_CLASS }), vdom_1.h.p({ className: CONTENT_DESC_CLASS }, commandPaletteDesc[1]), vdom_1.h.div({ className: CONTENT_DESC_CLASS }, vdom_1.h.p(commandPaletteDesc[2]), vdom_1.h.ul(vdom_1.h.li(commandPaletteDesc[3]), vdom_1.h.li(commandPaletteDesc[4]), vdom_1.h.li(commandPaletteDesc[5]), vdom_1.h.li(commandPaletteDesc[6]), vdom_1.h.li(commandPaletteDesc[7]))), vdom_1.h.a({ href: '#filebrowser' }, vdom_1.h.span({ className: NAV_CLASS }))));
        var filebrowserPage = vdom_1.h.div({ className: SECTION_CLASS }, vdom_1.h.a({ id: 'filebrowser' }), vdom_1.h.div({ className: SECTION_CENTER_CLASS }, vdom_1.h.p({ className: HEADER_CLASS + ' ' + CONTENT_CLASS }, vdom_1.h.span({ className: IMAGE_CLASS + ' ' + FILEBROWSER_ICON_CLASS }), pluginHeaders[2]), vdom_1.h.span({ className: IMAGE_CLASS + ' ' + FILEBROWSER_IMAGE_CLASS }), vdom_1.h.p({ className: CONTENT_DESC_CLASS }, filebrowserDesc[1]), vdom_1.h.a({ href: '#notebook' }, vdom_1.h.span({ className: NAV_CLASS }))));
        var notebookPage = vdom_1.h.div({ className: SECTION_CLASS }, vdom_1.h.a({ id: 'notebook' }), vdom_1.h.div({ className: SECTION_CENTER_CLASS }, vdom_1.h.p({ className: HEADER_CLASS + ' ' + CONTENT_CLASS }, vdom_1.h.span({ className: IMAGE_CLASS + ' ' + NOTEBOOK_ICON_CLASS }), pluginHeaders[3]), vdom_1.h.span({ className: IMAGE_CLASS + ' ' + NOTEBOOK_IMAGE_CLASS }), vdom_1.h.p({ className: CONTENT_DESC_CLASS }, notebookDesc[1])));
        var domTree = vdom_1.h.div({ id: ABOUT_ID }, vdom_1.h.div({ className: SECTION_CLASS }, vdom_1.h.div({ className: SECTION_CENTER_CLASS }, vdom_1.h.div({ className: CONTAINER_CLASS }, headerRow, mainAreaCommandPaletteRow, filebrowserNotebookRow), vdom_1.h.a({ href: '#main-area' }, vdom_1.h.span({ className: NAV_CLASS })))), mainAreaPage, commandPalettePage, filebrowserPage, notebookPage);
        return domTree;
    };
    return AboutWidget;
}(vdom_2.VDomWidget));
exports.AboutWidget = AboutWidget;
//# sourceMappingURL=index.js.map