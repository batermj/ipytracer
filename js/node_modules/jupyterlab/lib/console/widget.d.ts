import { ISession } from 'jupyter-js-services';
import { Token } from 'phosphor/lib/core/token';
import { Message } from 'phosphor/lib/core/messaging';
import { Widget } from 'phosphor/lib/ui/widget';
import { InspectionHandler } from '../inspector';
import { nbformat } from '../notebook/notebook/nbformat';
import { CodeCellWidget, RawCellWidget } from '../notebook/cells';
import { EdgeLocation, ICellEditorWidget } from '../notebook/cells/editor';
import { CompletionWidget } from '../notebook/completion';
import { IRenderMime } from '../rendermime';
/**
 * A widget containing a Jupyter console.
 */
export declare class ConsoleWidget extends Widget {
    /**
     * Construct a console widget.
     */
    constructor(options: ConsoleWidget.IOptions);
    /**
     * Get the inspection handler used by the console.
     *
     * #### Notes
     * This is a read-only property.
     */
    inspectionHandler: InspectionHandler;
    prompt: CodeCellWidget;
    /**
     * Get the session used by the console.
     *
     * #### Notes
     * This is a read-only property.
     */
    session: ISession;
    /**
     * Dispose of the resources held by the widget.
     */
    dispose(): void;
    /**
     * Execute the current prompt.
     */
    execute(): Promise<void>;
    /**
     * Clear the code cells.
     */
    clear(): void;
    /**
     * Dismiss the completion widget for a console.
     */
    dismissCompletion(): void;
    /**
     * Serialize the output.
     */
    serialize(): nbformat.ICodeCell[];
    /**
     * Handle `'activate-request'` messages.
     */
    protected onActivateRequest(msg: Message): void;
    /**
     * Handle an edge requested signal.
     */
    protected onEdgeRequest(editor: ICellEditorWidget, location: EdgeLocation): void;
    /**
     * Handle `update_request` messages.
     */
    protected onUpdateRequest(msg: Message): void;
    /**
     * Initialize the banner and mimetype.
     */
    protected initialize(): void;
    /**
     * Make a new prompt.
     */
    protected newPrompt(): void;
    /**
     * Update the console based on the kernel info.
     */
    private _handleInfo(info);
    private _completion;
    private _completionHandler;
    private _inspectionHandler;
    private _mimetype;
    private _rendermime;
    private _renderer;
    private _history;
    private _session;
}
/**
 * A namespace for ConsoleWidget statics.
 */
export declare namespace ConsoleWidget {
    /**
     * The initialization options for a console widget.
     */
    interface IOptions {
        /**
         * The completion widget for a console widget.
         */
        completion?: CompletionWidget;
        /**
         * The mime renderer for the console widget.
         */
        rendermime: IRenderMime;
        /**
         * The renderer for a console widget.
         */
        renderer: IRenderer;
        /**
         * The session for the console widget.
         */
        session: ISession;
    }
    /**
     * A renderer for completion widget nodes.
     */
    interface IRenderer {
        /**
         * Create a new banner widget.
         */
        createBanner(): RawCellWidget;
        /**
         * Create a new prompt widget.
         */
        createPrompt(rendermime: IRenderMime): CodeCellWidget;
    }
    /**
     * The console renderer token.
     */
    const IRenderer: Token<IRenderer>;
}
