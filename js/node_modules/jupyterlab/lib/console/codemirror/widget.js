// Copyright (c) Jupyter Development Team.
// Distributed under the terms of the Modified BSD License.
"use strict";
var model_1 = require('../../notebook/cells/model');
var widget_1 = require('../../notebook/cells/widget');
var widget_2 = require('../../notebook/codemirror/cells/widget');
var widget_3 = require('../../notebook/codemirror/notebook/widget');
var mimetype_1 = require('../../notebook/common/mimetype');
/**
 * A code mirror renderer for a console.
 */
var CodeMirrorConsoleRenderer = (function () {
    function CodeMirrorConsoleRenderer() {
    }
    /**
     * Create a new banner widget.
     */
    CodeMirrorConsoleRenderer.prototype.createBanner = function () {
        var widget = new widget_1.RawCellWidget({
            renderer: widget_3.CodeMirrorNotebookRenderer.defaultRawCellRenderer
        });
        widget.model = new model_1.RawCellModel();
        return widget;
    };
    /**
     * Create a new prompt widget.
     */
    CodeMirrorConsoleRenderer.prototype.createPrompt = function (rendermime, context) {
        var widget = new widget_1.CodeCellWidget({
            rendermime: rendermime,
            renderer: CodeMirrorConsoleRenderer.defaultCodeCellRenderer
        });
        widget.model = new model_1.CodeCellModel();
        return widget;
    };
    /**
     * Create a new code cell widget for an input from a foreign session.
     */
    CodeMirrorConsoleRenderer.prototype.createForeignCell = function (rendermime, context) {
        var widget = new widget_1.CodeCellWidget({
            rendermime: rendermime,
            renderer: CodeMirrorConsoleRenderer.defaultCodeCellRenderer
        });
        widget.model = new model_1.CodeCellModel();
        return widget;
    };
    /**
     * Get the preferred mimetype given language info.
     */
    CodeMirrorConsoleRenderer.prototype.getCodeMimetype = function (info) {
        return mimetype_1.mimetypeForLanguage(info);
    };
    return CodeMirrorConsoleRenderer;
}());
exports.CodeMirrorConsoleRenderer = CodeMirrorConsoleRenderer;
/**
 * A namespace for `CodeMirrorConsoleRenderer` statics.
 */
var CodeMirrorConsoleRenderer;
(function (CodeMirrorConsoleRenderer) {
    /**
     * A default code mirror renderer for a console.
     */
    CodeMirrorConsoleRenderer.defaultRenderer = new CodeMirrorConsoleRenderer();
    /**
     * A default code mirror renderer for a code cell editor.
     */
    CodeMirrorConsoleRenderer.defaultCodeCellRenderer = new widget_2.CodeMirrorCodeCellWidgetRenderer({
        editorInitializer: function (editor) {
            editor.editor.setOption('matchBrackets', false);
            editor.editor.setOption('autoCloseBrackets', false);
            editor.editor.setOption('extraKeys', {
                Enter: function () { }
            });
        }
    });
})(CodeMirrorConsoleRenderer = exports.CodeMirrorConsoleRenderer || (exports.CodeMirrorConsoleRenderer = {}));
//# sourceMappingURL=widget.js.map