import { Session } from '@jupyterlab/services';
import { Message } from 'phosphor/lib/core/messaging';
import { Panel } from 'phosphor/lib/ui/panel';
import { IRenderMime } from '../rendermime';
import { ConsoleContent } from './content';
/**
 * A panel which contains a console and the ability to add other children.
 */
export declare class ConsolePanel extends Panel {
    /**
     * Construct a console panel.
     */
    constructor(options: ConsolePanel.IOptions);
    /**
     * The console widget used by the panel.
     *
     * #### Notes
     * This is a read-only property.
     */
    readonly content: ConsoleContent;
    /**
     * Dispose of the resources held by the widget.
     */
    dispose(): void;
    /**
     * Handle `'activate-request'` messages.
     */
    protected onActivateRequest(msg: Message): void;
    /**
     * Handle `'close-request'` messages.
     */
    protected onCloseRequest(msg: Message): void;
    private _content;
}
/**
 * A namespace for ConsolePanel statics.
 */
export declare namespace ConsolePanel {
    /**
     * The initialization options for a console panel.
     */
    interface IOptions {
        /**
         * The optional console content instance to display in the console panel.
         *
         * #### Notes
         * If a console content widget is passed in, its MIME renderer and session
         * must match the values in the console panel options argument or it will
         * result in undefined behavior.
         */
        content?: ConsoleContent;
        /**
         * The mime renderer for the console panel.
         */
        rendermime: IRenderMime;
        /**
         * The renderer for a console widget.
         */
        renderer: ConsoleContent.IRenderer;
        /**
         * The session for the console panel.
         */
        session: Session.ISession;
    }
}
