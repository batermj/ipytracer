import { Contents } from '@jupyterlab/services';
import { DocumentRegistry } from '../../docregistry';
import { INotebookModel } from './model';
/**
 * A model factory for notebooks.
 */
export declare class NotebookModelFactory implements DocumentRegistry.IModelFactory<INotebookModel> {
    /**
     * The name of the model.
     */
    readonly name: string;
    /**
     * The content type of the file.
     */
    readonly contentType: Contents.ContentType;
    /**
     * The format of the file.
     */
    readonly fileFormat: Contents.FileFormat;
    /**
     * Get whether the model factory has been disposed.
     */
    readonly isDisposed: boolean;
    /**
     * Dispose of the model factory.
     */
    dispose(): void;
    /**
     * Create a new model for a given path.
     *
     * @param languagePreference - An optional kernel language preference.
     *
     * @returns A new document model.
     */
    createNew(languagePreference?: string): INotebookModel;
    /**
     * Get the preferred kernel language given a path.
     */
    preferredLanguage(path: string): string;
    private _disposed;
}
