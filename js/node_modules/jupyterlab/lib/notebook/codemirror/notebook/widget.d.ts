import { nbformat } from '@jupyterlab/services';
import { RenderMime } from '../../../rendermime';
import { ICodeCellModel, IMarkdownCellModel, IRawCellModel } from '../../cells/model';
import { CodeCellWidget, MarkdownCellWidget, RawCellWidget } from '../../cells/widget';
import { Notebook } from '../../notebook/widget';
import { CodeMirrorCodeCellWidgetRenderer } from '../cells/widget';
/**
 * A code mirror renderer for a notebook.
 */
export declare class CodeMirrorNotebookRenderer extends Notebook.Renderer {
    /**
     * Create a code cell editor.
     */
    createCodeCell(model: ICodeCellModel, rendermime: RenderMime): CodeCellWidget;
    /**
     * Create a markdown cell editor.
     */
    createMarkdownCell(model: IMarkdownCellModel, rendermime: RenderMime): MarkdownCellWidget;
    /**
     * Create a raw cell editor.
     */
    createRawCell(model: IRawCellModel): RawCellWidget;
    /**
     * Get the preferred mimetype given language info.
     */
    getCodeMimetype(info: nbformat.ILanguageInfoMetadata): string;
}
/**
 * A namespace for `CodeMirrorNotebookRenderer` statics.
 */
export declare namespace CodeMirrorNotebookRenderer {
    /**
     * A default code mirror renderer for a code cell editor.
     */
    const defaultCodeCellRenderer: CodeMirrorCodeCellWidgetRenderer;
    /**
     * A default code mirror renderer for a markdown cell editor.
     */
    const defaultMarkdownCellRenderer: CodeMirrorCodeCellWidgetRenderer;
    /**
     * A default code mirror renderer for a raw cell editor.
     */
    const defaultRawCellRenderer: CodeMirrorCodeCellWidgetRenderer;
    /**
     * A default code mirror renderer for a notebook.
     */
    const defaultRenderer: CodeMirrorNotebookRenderer;
}
