// Copyright (c) Jupyter Development Team.
// Distributed under the terms of the Modified BSD License.
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var widget_1 = require('../../cells/widget');
var editor_1 = require('./editor');
/**
 * A code mirror renderer for a code cell widget.
 */
var CodeMirrorCodeCellWidgetRenderer = (function (_super) {
    __extends(CodeMirrorCodeCellWidgetRenderer, _super);
    /**
     * Construct a code mirror renderer for a code cell widget.
     * @param editorConfiguration a code mirror editor configuration
     * @param editorInitializer a code cell widget initializer
     */
    function CodeMirrorCodeCellWidgetRenderer(options) {
        if (options === void 0) { options = {}; }
        _super.call(this);
        this._editorConfiguration = null;
        this._editorInitializer = null;
        this._editorConfiguration = (options.editorConfiguration ||
            CodeMirrorCodeCellWidgetRenderer.defaultEditorConfiguration);
        this._editorInitializer = (options.editorInitializer ||
            (function (editor) { }));
    }
    /**
     * Construct a code cell widget.
     */
    CodeMirrorCodeCellWidgetRenderer.prototype.createCellEditor = function () {
        var widget = new editor_1.CodeMirrorCellEditorWidget(this._editorConfiguration);
        this._editorInitializer(widget);
        return widget;
    };
    return CodeMirrorCodeCellWidgetRenderer;
}(widget_1.CodeCellWidget.Renderer));
exports.CodeMirrorCodeCellWidgetRenderer = CodeMirrorCodeCellWidgetRenderer;
/**
 * A namespace for `CodeMirrorCodeCellWidgetRenderer` statics.
 */
var CodeMirrorCodeCellWidgetRenderer;
(function (CodeMirrorCodeCellWidgetRenderer) {
    /**
     * A default code mirror configuration for a cell editor.
     */
    CodeMirrorCodeCellWidgetRenderer.defaultEditorConfiguration = {
        // Default value of the theme is set in the parent constructor,
        // but could be overridden here
        indentUnit: 4,
        readOnly: false,
        extraKeys: {
            'Cmd-Right': 'goLineRight',
            'End': 'goLineRight',
            'Cmd-Left': 'goLineLeft',
            'Tab': 'indentMore',
            'Shift-Tab': 'indentLess',
            'Cmd-Alt-[': 'indentAuto',
            'Ctrl-Alt-[': 'indentAuto',
            'Cmd-/': 'toggleComment',
            'Ctrl-/': 'toggleComment',
        }
    };
    /**
     * A default code mirror renderer for a code cell widget.
     */
    CodeMirrorCodeCellWidgetRenderer.defaultRenderer = new CodeMirrorCodeCellWidgetRenderer();
})(CodeMirrorCodeCellWidgetRenderer = exports.CodeMirrorCodeCellWidgetRenderer || (exports.CodeMirrorCodeCellWidgetRenderer = {}));
//# sourceMappingURL=widget.js.map