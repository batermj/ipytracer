import { ISignal } from 'phosphor/lib/core/signaling';
import { FocusTracker } from 'phosphor/lib/ui/focustracker';
import { Widget } from 'phosphor/lib/ui/widget';
/**
 * The options for adding a widget to a side area of the shell.
 */
export interface ISideAreaOptions {
    /**
     * The rank order of the widget among its siblings.
     */
    rank?: number;
}
/**
 * The application shell for JupyterLab.
 */
export declare class ApplicationShell extends Widget {
    /**
     * Construct a new application shell.
     */
    constructor();
    /**
     * A signal emitted when main area's current focus changes.
     */
    readonly currentChanged: ISignal<this, FocusTracker.ICurrentChangedArgs<Widget>>;
    /**
     * The current widget in the shell's main area.
     *
     * #### Notes
     * This property is read-only.
     */
    readonly currentWidget: Widget;
    /**
     * Add a widget to the top content area.
     *
     * #### Notes
     * Widgets must have a unique `id` property, which will be used as the DOM id.
     */
    addToTopArea(widget: Widget, options?: ISideAreaOptions): void;
    /**
     * Add a widget to the left content area.
     *
     * #### Notes
     * Widgets must have a unique `id` property, which will be used as the DOM id.
     */
    addToLeftArea(widget: Widget, options?: ISideAreaOptions): void;
    /**
     * Add a widget to the right content area.
     *
     * #### Notes
     * Widgets must have a unique `id` property, which will be used as the DOM id.
     */
    addToRightArea(widget: Widget, options?: ISideAreaOptions): void;
    /**
     * Add a widget to the main content area.
     *
     * #### Notes
     * Widgets must have a unique `id` property, which will be used as the DOM id.
     */
    addToMainArea(widget: Widget): void;
    /**
     * Activate a widget in the left area.
     */
    activateLeft(id: string): void;
    /**
     * Activate a widget in the right area.
     */
    activateRight(id: string): void;
    /**
     * Activate a widget in the main area.
     */
    activateMain(id: string): void;
    /**
     * Collapse the left area.
     */
    collapseLeft(): void;
    /**
     * Collapse the right area.
     */
    collapseRight(): void;
    /**
     * Close all tracked widgets.
     */
    closeAll(): void;
    private _topPanel;
    private _hboxPanel;
    private _dockPanel;
    private _hsplitPanel;
    private _leftHandler;
    private _rightHandler;
}
